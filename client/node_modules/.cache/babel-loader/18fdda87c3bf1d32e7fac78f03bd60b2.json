{"ast":null,"code":"import _slicedToArray from \"/Users/alex/Documents/CODING/REPOS/React-Portfolio-2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@mui/utils\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useFormControlUnstyledContext } from '../FormControlUnstyled';\nimport extractEventHandlers from '../utils/extractEventHandlers';\nexport default function useInput(props, inputRef) {\n  var defaultValueProp = props.defaultValue,\n      _props$disabled = props.disabled,\n      disabledProp = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      errorProp = _props$error === void 0 ? false : _props$error,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      _props$required = props.required,\n      requiredProp = _props$required === void 0 ? false : _props$required,\n      valueProp = props.value;\n  var formControlContext = useFormControlUnstyledContext();\n  var defaultValue;\n  var disabled;\n  var error;\n  var required;\n  var value;\n\n  if (formControlContext) {\n    var _formControlContext$d, _formControlContext$e, _formControlContext$r;\n\n    defaultValue = undefined;\n    disabled = (_formControlContext$d = formControlContext.disabled) != null ? _formControlContext$d : false;\n    error = (_formControlContext$e = formControlContext.error) != null ? _formControlContext$e : false;\n    required = (_formControlContext$r = formControlContext.required) != null ? _formControlContext$r : false;\n    value = formControlContext.value;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var definedLocalProps = ['defaultValue', 'disabled', 'error', 'required', 'value'].filter(function (prop) {\n        return props[prop] !== undefined;\n      });\n\n      if (definedLocalProps.length > 0) {\n        console.warn(['MUI: You have set props on an input that is inside a FormControlUnstyled.', 'Set these props on a FormControlUnstyled instead. Otherwise they will be ignored.', \"Ignored props: \".concat(definedLocalProps.join(', '))].join('\\n'));\n      }\n    }\n  } else {\n    defaultValue = defaultValueProp;\n    disabled = disabledProp;\n    error = errorProp;\n    required = requiredProp;\n    value = valueProp;\n  }\n\n  var _React$useRef = React.useRef(value != null),\n      isControlled = _React$useRef.current;\n\n  var handleInputRefWarning = React.useCallback(function (instance) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (instance && instance.nodeName !== 'INPUT' && !instance.focus) {\n        console.error(['MUI: You have provided a `components.Input` to the input component', 'that does not correctly handle the `ref` prop.', 'Make sure the `ref` prop is called with a HTMLInputElement.'].join('\\n'));\n      }\n    }\n  }, []);\n  var internalInputRef = React.useRef(null);\n  var handleIncomingRef = useForkRef(inputRef, handleInputRefWarning);\n  var handleInputRef = useForkRef(internalInputRef, handleIncomingRef);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      focused = _React$useState2[0],\n      setFocused = _React$useState2[1]; // The blur won't fire when the disabled state is set on a focused input.\n  // We need to book keep the focused state manually.\n\n\n  React.useEffect(function () {\n    if (!formControlContext && disabled && focused) {\n      setFocused(false); // @ts-ignore\n\n      onBlur == null ? void 0 : onBlur();\n    }\n  }, [formControlContext, disabled, focused, onBlur]);\n\n  var handleFocus = function handleFocus(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onFocu; // Fix a bug with IE11 where the focus/blur events are triggered\n      // while the component is disabled.\n\n\n      if (formControlContext != null && formControlContext.disabled) {\n        event.stopPropagation();\n        return;\n      }\n\n      (_otherHandlers$onFocu = otherHandlers.onFocus) == null ? void 0 : _otherHandlers$onFocu.call(otherHandlers, event);\n\n      if (formControlContext && formControlContext.onFocus) {\n        var _formControlContext$o;\n\n        formControlContext == null ? void 0 : (_formControlContext$o = formControlContext.onFocus) == null ? void 0 : _formControlContext$o.call(formControlContext);\n      } else {\n        setFocused(true);\n      }\n    };\n  };\n\n  var handleBlur = function handleBlur(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onBlur;\n\n      (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, event);\n\n      if (formControlContext && formControlContext.onBlur) {\n        formControlContext.onBlur();\n      } else {\n        setFocused(false);\n      }\n    };\n  };\n\n  var handleChange = function handleChange(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onChan2;\n\n      var _formControlContext$o2, _otherHandlers$onChan;\n\n      if (!isControlled) {\n        var element = event.target || internalInputRef.current;\n\n        if (element == null) {\n          throw new Error(process.env.NODE_ENV !== \"production\" ? \"MUI: Expected valid input target. Did you use a custom `components.Input` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info.\" : _formatMuiErrorMessage(17));\n        }\n      }\n\n      formControlContext == null ? void 0 : (_formControlContext$o2 = formControlContext.onChange) == null ? void 0 : _formControlContext$o2.call(formControlContext, event); // @ts-ignore\n\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      (_otherHandlers$onChan = otherHandlers.onChange) == null ? void 0 : (_otherHandlers$onChan2 = _otherHandlers$onChan).call.apply(_otherHandlers$onChan2, [otherHandlers, event].concat(args));\n    };\n  };\n\n  var handleClick = function handleClick(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onClic;\n\n      if (internalInputRef.current && event.currentTarget === event.target) {\n        internalInputRef.current.focus();\n      }\n\n      (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);\n    };\n  };\n\n  var getRootProps = function getRootProps(externalProps) {\n    // onBlur, onChange and onFocus are forwarded to the input slot.\n    var propsEventHandlers = extractEventHandlers(props, ['onBlur', 'onChange', 'onFocus']);\n\n    var externalEventHandlers = _extends({}, propsEventHandlers, extractEventHandlers(externalProps));\n\n    return _extends({}, externalProps, externalEventHandlers, {\n      onClick: handleClick(externalEventHandlers)\n    });\n  };\n\n  var getInputProps = function getInputProps(externalProps) {\n    var propsEventHandlers = {\n      onBlur: onBlur,\n      onChange: onChange,\n      onFocus: onFocus\n    };\n\n    var externalEventHandlers = _extends({}, propsEventHandlers, extractEventHandlers(externalProps));\n\n    var mergedEventHandlers = _extends({}, externalProps, externalEventHandlers, {\n      onBlur: handleBlur(externalEventHandlers),\n      onChange: handleChange(externalEventHandlers),\n      onFocus: handleFocus(externalEventHandlers)\n    });\n\n    return _extends({}, mergedEventHandlers, {\n      'aria-invalid': error || undefined,\n      defaultValue: defaultValue,\n      ref: handleInputRef,\n      value: value,\n      required: required,\n      disabled: disabled\n    });\n  };\n\n  return {\n    disabled: disabled,\n    error: error,\n    focused: focused,\n    formControlContext: formControlContext,\n    getInputProps: getInputProps,\n    getRootProps: getRootProps,\n    required: required,\n    value: value\n  };\n}","map":{"version":3,"sources":["/Users/alex/Documents/CODING/REPOS/React-Portfolio-2/node_modules/@mui/base/InputUnstyled/useInput.js"],"names":["_extends","formatMuiErrorMessage","_formatMuiErrorMessage","React","unstable_useForkRef","useForkRef","useFormControlUnstyledContext","extractEventHandlers","useInput","props","inputRef","defaultValueProp","defaultValue","disabled","disabledProp","error","errorProp","onBlur","onChange","onFocus","required","requiredProp","valueProp","value","formControlContext","_formControlContext$d","_formControlContext$e","_formControlContext$r","undefined","process","env","NODE_ENV","definedLocalProps","filter","prop","length","console","warn","join","useRef","isControlled","current","handleInputRefWarning","useCallback","instance","nodeName","focus","internalInputRef","handleIncomingRef","handleInputRef","useState","focused","setFocused","useEffect","handleFocus","otherHandlers","event","_otherHandlers$onFocu","stopPropagation","call","_formControlContext$o","handleBlur","_otherHandlers$onBlur","handleChange","_formControlContext$o2","_otherHandlers$onChan","element","target","Error","args","handleClick","_otherHandlers$onClic","currentTarget","onClick","getRootProps","externalProps","propsEventHandlers","externalEventHandlers","getInputProps","mergedEventHandlers","ref"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@mui/utils\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useFormControlUnstyledContext } from '../FormControlUnstyled';\nimport extractEventHandlers from '../utils/extractEventHandlers';\nexport default function useInput(props, inputRef) {\n  const {\n    defaultValue: defaultValueProp,\n    disabled: disabledProp = false,\n    error: errorProp = false,\n    onBlur,\n    onChange,\n    onFocus,\n    required: requiredProp = false,\n    value: valueProp\n  } = props;\n  const formControlContext = useFormControlUnstyledContext();\n  let defaultValue;\n  let disabled;\n  let error;\n  let required;\n  let value;\n\n  if (formControlContext) {\n    var _formControlContext$d, _formControlContext$e, _formControlContext$r;\n\n    defaultValue = undefined;\n    disabled = (_formControlContext$d = formControlContext.disabled) != null ? _formControlContext$d : false;\n    error = (_formControlContext$e = formControlContext.error) != null ? _formControlContext$e : false;\n    required = (_formControlContext$r = formControlContext.required) != null ? _formControlContext$r : false;\n    value = formControlContext.value;\n\n    if (process.env.NODE_ENV !== 'production') {\n      const definedLocalProps = ['defaultValue', 'disabled', 'error', 'required', 'value'].filter(prop => props[prop] !== undefined);\n\n      if (definedLocalProps.length > 0) {\n        console.warn(['MUI: You have set props on an input that is inside a FormControlUnstyled.', 'Set these props on a FormControlUnstyled instead. Otherwise they will be ignored.', `Ignored props: ${definedLocalProps.join(', ')}`].join('\\n'));\n      }\n    }\n  } else {\n    defaultValue = defaultValueProp;\n    disabled = disabledProp;\n    error = errorProp;\n    required = requiredProp;\n    value = valueProp;\n  }\n\n  const {\n    current: isControlled\n  } = React.useRef(value != null);\n  const handleInputRefWarning = React.useCallback(instance => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (instance && instance.nodeName !== 'INPUT' && !instance.focus) {\n        console.error(['MUI: You have provided a `components.Input` to the input component', 'that does not correctly handle the `ref` prop.', 'Make sure the `ref` prop is called with a HTMLInputElement.'].join('\\n'));\n      }\n    }\n  }, []);\n  const internalInputRef = React.useRef(null);\n  const handleIncomingRef = useForkRef(inputRef, handleInputRefWarning);\n  const handleInputRef = useForkRef(internalInputRef, handleIncomingRef);\n  const [focused, setFocused] = React.useState(false); // The blur won't fire when the disabled state is set on a focused input.\n  // We need to book keep the focused state manually.\n\n  React.useEffect(() => {\n    if (!formControlContext && disabled && focused) {\n      setFocused(false); // @ts-ignore\n\n      onBlur == null ? void 0 : onBlur();\n    }\n  }, [formControlContext, disabled, focused, onBlur]);\n\n  const handleFocus = otherHandlers => event => {\n    var _otherHandlers$onFocu;\n\n    // Fix a bug with IE11 where the focus/blur events are triggered\n    // while the component is disabled.\n    if (formControlContext != null && formControlContext.disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    (_otherHandlers$onFocu = otherHandlers.onFocus) == null ? void 0 : _otherHandlers$onFocu.call(otherHandlers, event);\n\n    if (formControlContext && formControlContext.onFocus) {\n      var _formControlContext$o;\n\n      formControlContext == null ? void 0 : (_formControlContext$o = formControlContext.onFocus) == null ? void 0 : _formControlContext$o.call(formControlContext);\n    } else {\n      setFocused(true);\n    }\n  };\n\n  const handleBlur = otherHandlers => event => {\n    var _otherHandlers$onBlur;\n\n    (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, event);\n\n    if (formControlContext && formControlContext.onBlur) {\n      formControlContext.onBlur();\n    } else {\n      setFocused(false);\n    }\n  };\n\n  const handleChange = otherHandlers => (event, ...args) => {\n    var _formControlContext$o2, _otherHandlers$onChan;\n\n    if (!isControlled) {\n      const element = event.target || internalInputRef.current;\n\n      if (element == null) {\n        throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: Expected valid input target. Did you use a custom \\`components.Input\\` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info.` : _formatMuiErrorMessage(17));\n      }\n    }\n\n    formControlContext == null ? void 0 : (_formControlContext$o2 = formControlContext.onChange) == null ? void 0 : _formControlContext$o2.call(formControlContext, event); // @ts-ignore\n\n    (_otherHandlers$onChan = otherHandlers.onChange) == null ? void 0 : _otherHandlers$onChan.call(otherHandlers, event, ...args);\n  };\n\n  const handleClick = otherHandlers => event => {\n    var _otherHandlers$onClic;\n\n    if (internalInputRef.current && event.currentTarget === event.target) {\n      internalInputRef.current.focus();\n    }\n\n    (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);\n  };\n\n  const getRootProps = externalProps => {\n    // onBlur, onChange and onFocus are forwarded to the input slot.\n    const propsEventHandlers = extractEventHandlers(props, ['onBlur', 'onChange', 'onFocus']);\n\n    const externalEventHandlers = _extends({}, propsEventHandlers, extractEventHandlers(externalProps));\n\n    return _extends({}, externalProps, externalEventHandlers, {\n      onClick: handleClick(externalEventHandlers)\n    });\n  };\n\n  const getInputProps = externalProps => {\n    const propsEventHandlers = {\n      onBlur,\n      onChange,\n      onFocus\n    };\n\n    const externalEventHandlers = _extends({}, propsEventHandlers, extractEventHandlers(externalProps));\n\n    const mergedEventHandlers = _extends({}, externalProps, externalEventHandlers, {\n      onBlur: handleBlur(externalEventHandlers),\n      onChange: handleChange(externalEventHandlers),\n      onFocus: handleFocus(externalEventHandlers)\n    });\n\n    return _extends({}, mergedEventHandlers, {\n      'aria-invalid': error || undefined,\n      defaultValue: defaultValue,\n      ref: handleInputRef,\n      value: value,\n      required,\n      disabled\n    });\n  };\n\n  return {\n    disabled,\n    error,\n    focused,\n    formControlContext,\n    getInputProps,\n    getRootProps,\n    required,\n    value\n  };\n}"]},"metadata":{},"sourceType":"module"}